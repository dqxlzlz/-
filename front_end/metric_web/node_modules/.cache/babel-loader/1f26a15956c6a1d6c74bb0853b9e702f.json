{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// import axios from \"axios\";\nimport axios from \"axios\";\nimport x2js from \"x2js\";\nexport default {\n  name: \"LK\",\n  data: function data() {\n    return {\n      data_isshow: false,\n      data: \"\",\n      resdata_json: []\n    };\n  },\n  methods: {\n    readAsText: function readAsText(params) {\n      var file = params.file;\n      var reader = new FileReader();\n      reader.readAsText(file);\n\n      reader.onload = function () {\n        var _this = this;\n\n        var text = reader.result;\n        this.data = text;\n        console.log(this.data);\n        this.success(\"文件读取成功\");\n        axios.post('/api//LKMetrics', this.data, {\n          headers: {\n            'Content-Type': 'application/xml'\n          }\n        }).then(function (response) {\n          console.log(response);\n          var xml_str = response.data.toString();\n          console.log(xml_str);\n          var myx2json = new x2js(); //实例\n\n          var json = myx2json.xml2js(xml_str); //解析\n\n          console.log(json);\n          var that = _this;\n          _this.resdata_json = [];\n          json.message.lkResultList.result.forEach(function (item) {\n            console.log('this', this);\n            console.log('that', that);\n            that.resdata_json.push(item);\n          });\n          _this.data_isshow = true;\n        }).catch(function (error) {\n          console.log(error);\n\n          _this.warn(\"文件内容不支持\");\n\n          _this.data_isshow = false;\n        });\n      }.bind(this);\n    },\n    xmlToJson: function xmlToJson(xml) {\n      // Create the return object\n      var obj = {};\n\n      if (xml.nodeType == 1) {\n        // element\n        // do attributes\n        if (xml.attributes.length > 0) {\n          obj[\"@attributes\"] = {};\n\n          for (var j = 0; j < xml.attributes.length; j++) {\n            var attribute = xml.attributes.item(j);\n            obj[\"@attributes\"][attribute.nodeName] = attribute.nodeValue;\n          }\n        }\n      } else if (xml.nodeType == 3) {\n        // text\n        obj = xml.nodeValue;\n      } // do children\n\n\n      if (xml.hasChildNodes()) {\n        for (var i = 0; i < xml.childNodes.length; i++) {\n          var item = xml.childNodes.item(i);\n          var nodeName = item.nodeName;\n\n          if (typeof obj[nodeName] == \"undefined\") {\n            obj[nodeName] = this.xmlToJson(item);\n          } else {\n            if (typeof obj[nodeName].push == \"undefined\") {\n              var old = obj[nodeName];\n              obj[nodeName] = [];\n              obj[nodeName].push(old);\n            }\n\n            obj[nodeName].push(this.xmlToJson(item));\n          }\n        }\n      }\n\n      return obj;\n    },\n    success: function success(message) {\n      this.$message({\n        message: message,\n        type: 'success'\n      });\n    },\n    warn: function warn(message) {\n      this.$message({\n        message: message,\n        type: 'warning'\n      });\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqDA;AAEA;AACA;AAEA;AACAA,YADA;AAEAC,MAFA,kBAEA;AACA;AACAC,wBADA;AAEAD,cAFA;AAGAE;AAHA;AAKA,GARA;AASAC;AACAC,cADA,sBACAC,MADA,EACA;AACA;AACA;AACAC;;AACAA;AAAA;;AACA;AACA;AACAC;AACA;AACAC,mBACA,iBADA,EAEA,SAFA,EAGA;AACAC;AACA;AADA;AADA,SAHA,EAQAC,IARA,CAQA;AACAH;AAEA;AACAA;AACA,oCALA,CAKA;;AACA,8CANA,CAMA;;AACAA;AACA;AACA;AACAI;AACAJ;AACAA;AACAK;AACA,WAJA;AAKA;AACA,SAxBA,EAwBAC,KAxBA,CAwBA;AACAN;;AACA;;AACA;AACA,SA5BA;AA6BA,OAlCA,CAkCAO,IAlCA,CAkCA,IAlCA;AAmCA,KAxCA;AAyCAC,aAzCA,qBAyCAC,GAzCA,EAyCA;AACA;AACA;;AAEA;AAAA;AACA;AACA;AACAC;;AACA;AACA;AACAA;AACA;AACA;AACA,OATA,MASA;AAAA;AACAA;AACA,OAfA,CAiBA;;;AACA;AACA;AACA;AACA;;AACA;AACAA;AACA,WAFA,MAEA;AACA;AACA;AACAA;AACAA;AACA;;AACAA;AACA;AACA;AACA;;AACA;AACA,KA5EA;AA6EAC,WA7EA,mBA6EAC,OA7EA,EA6EA;AACA;AACAA,wBADA;AAEAC;AAFA;AAIA,KAlFA;AAmFAC,QAnFA,gBAmFAF,OAnFA,EAmFA;AACA;AACAA,wBADA;AAEAC;AAFA;AAIA;AAxFA;AATA","names":["name","data","data_isshow","resdata_json","methods","readAsText","params","reader","console","axios","headers","then","json","that","catch","bind","xmlToJson","xml","obj","success","message","type","warn"],"sourceRoot":"src/components","sources":["LK.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>LK</h1>\n    <el-upload\n        drag\n        action=\"\"\n        :http-request=\"readAsText\"\n        accept=\".xml\"\n    >\n      <i class=\"el-icon-upload\"></i>\n      <div class=\"el-upload__text\">将文件拖到此处，或<em>点击上传</em></div>\n      <div class=\"el-upload__tip\" slot=\"tip\">只能上传.xml文件</div>\n    </el-upload>\n\n    <el-table\n        v-if=\"data_isshow\"\n        :data=\"resdata_json\"\n        style=\"width: 100%\">\n      <el-table-column\n          prop=\"name\"\n          label=\"name\"\n          width=\"180\">\n      </el-table-column>\n      <el-table-column\n          prop=\"noa\"\n          label=\"noa\"\n          width=\"180\">\n      </el-table-column>\n      <el-table-column\n          prop=\"noo\"\n          label=\"noo\"\n          width=\"180\">\n      </el-table-column>\n      <el-table-column\n          prop=\"si\"\n          label=\"si\"\n          width=\"180\">\n      </el-table-column>\n      <el-table-column\n          prop=\"totalNumberOfAttr\"\n          label=\"totalNumberOfAttr\"\n          width=\"180\">\n      </el-table-column>\n      <el-table-column\n          prop=\"totalNumberOfMethod\"\n          label=\"totalNumberOfMethod\"\n          width=\"180\">\n      </el-table-column>\n    </el-table>\n  </div>\n</template>\n\n<script>\n// import axios from \"axios\";\n\nimport axios from \"axios\";\nimport x2js from \"x2js\";\n\nexport default {\n  name: \"LK\",\n  data () {\n    return {\n      data_isshow: false,\n      data: \"\",\n      resdata_json: [],\n    }\n  },\n  methods: {\n    readAsText(params) {\n      let file = params.file;\n      let reader = new FileReader();\n      reader.readAsText(file);\n      reader.onload = function() {\n        let text = reader.result;\n        this.data=text;\n        console.log(this.data);\n        this.success(\"文件读取成功\")\n        axios.post(\n            '/api//LKMetrics',\n            this.data,\n            {\n                headers: {\n                    'Content-Type': 'application/xml'\n                }\n            }\n        ).then(response=>{\n          console.log(response);\n\n          var xml_str = response.data.toString();\n          console.log(xml_str);\n          const myx2json=new x2js(); //实例\n          const json = myx2json.xml2js(xml_str)  //解析\n          console.log(json);\n          let that = this;\n          this.resdata_json = [];\n          json.message.lkResultList.result.forEach(function(item){\n            console.log('this', this);\n            console.log('that', that);\n            that.resdata_json.push(item);\n          })\n          this.data_isshow=true;\n        }).catch(error=>{\n              console.log(error);\n              this.warn(\"文件内容不支持\")\n              this.data_isshow = false\n            });\n      }.bind(this);\n    },\n    xmlToJson(xml) {\n      // Create the return object\n      var obj = {};\n\n      if (xml.nodeType == 1) { // element\n        // do attributes\n        if (xml.attributes.length > 0) {\n          obj[\"@attributes\"] = {};\n          for (var j = 0; j < xml.attributes.length; j++) {\n            var attribute = xml.attributes.item(j);\n            obj[\"@attributes\"][attribute.nodeName] = attribute.nodeValue;\n          }\n        }\n      } else if (xml.nodeType == 3) { // text\n        obj = xml.nodeValue;\n      }\n\n      // do children\n      if (xml.hasChildNodes()) {\n        for(var i = 0; i < xml.childNodes.length; i++) {\n          var item = xml.childNodes.item(i);\n          var nodeName = item.nodeName;\n          if (typeof(obj[nodeName]) == \"undefined\") {\n            obj[nodeName] = this.xmlToJson(item);\n          } else {\n            if (typeof(obj[nodeName].push) == \"undefined\") {\n              var old = obj[nodeName];\n              obj[nodeName] = [];\n              obj[nodeName].push(old);\n            }\n            obj[nodeName].push(this.xmlToJson(item));\n          }\n        }\n      }\n      return obj;\n    },\n    success(message) {\n      this.$message({\n        message: message,\n        type: 'success'\n      });\n    },\n    warn(message) {\n      this.$message({\n        message: message,\n        type: 'warning'\n      });\n    },\n  },\n}\n</script>\n\n<style scoped>\n\n</style>"]},"metadata":{},"sourceType":"module"}